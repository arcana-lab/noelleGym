#!/bin/bash

# Check the existance of the results
if ! test -d results/current_machine ; then
  echo "There is no results (results/current_machine)" ;
  exit ;
fi
cd results/current_machine ;
resultDir="`pwd`" ;
echo "Next we list the results/code that are currently missing in \"results/current_machine\"" ;
echo "" ;

# Check the IR
echo "=== IR";
pushd ./ &> /dev/null ;
if ! test -d IR ; then
  echo "  Not available" ;
  exit 0;
fi
cd IR ;
for i in `ls` ; do
  if ! test -d $i ; then
    continue ;
  fi

  numberOfBenchmarks="`ls -l ${i}/benchmarks/*/NOELLE_input.bc 2> /dev/null | wc -l`" ;
  numberOfBaselines="`ls -l ${i}/benchmarks/*/baseline_with_metadata.bc 2> /dev/null | wc -l`" ;
  numberOfNONE="`ls -l ${i}/benchmarks/*/baseline_parallelized_NONE.bc 2> /dev/null | wc -l`" ;
  numberOfDOALL="`ls -l ${i}/benchmarks/*/baseline_parallelized_DOALL.bc 2> /dev/null | wc -l`" ;
  numberOfDSWP="`ls -l ${i}/benchmarks/*/baseline_parallelized_DSWP.bc 2> /dev/null | wc -l`" ;
  numberOfHELIX="`ls -l ${i}/benchmarks/*/baseline_parallelized_HELIX.bc 2> /dev/null | wc -l`" ;
  numberOfAUTOTUNER="`ls -l ${i}/benchmarks/*/baseline_parallelized_AUTOTUNER.bc 2> /dev/null | wc -l`" ;
  if test "$numberOfBenchmarks" != "$numberOfBaselines" ; then
    echo "The suite \"$i\" has only $numberOfBaselines (over $numberOfBenchmarks) baselines" ;
  fi
  if test "$numberOfBenchmarks" != "$numberOfNONE" ; then
    echo "The suite \"$i\" has only $numberOfNONE (over $numberOfBenchmarks) benchmarks parallelized with NONE benchmarks" ;
  fi
  if test "$numberOfBenchmarks" != "$numberOfDOALL" ; then
    echo "The suite \"$i\" has only $numberOfDOALL (over $numberOfBenchmarks) benchmarks parallelized with DOALL benchmarks" ;
  fi
  if test "$numberOfBenchmarks" != "$numberOfHELIX" ; then
    echo "The suite \"$i\" has only $numberOfHELIX (over $numberOfBenchmarks) benchmarks parallelized with HELIX benchmarks" ;
  fi
  if test "$numberOfBenchmarks" != "$numberOfDSWP" ; then
    echo "The suite \"$i\" has only $numberOfDSWP (over $numberOfBenchmarks) benchmarks parallelized with DSWP benchmarks" ;
  fi
  if test "$numberOfBenchmarks" != "$numberOfAUTOTUNER" ; then
    echo "The suite \"$i\" has only $numberOfAUTOTUNER (over $numberOfBenchmarks) benchmarks parallelized with AUTOTUNER benchmarks" ;
  fi
done
popd &> /dev/null ;
echo "" ;

# Check the dependences
echo "=== Dependences";
if test -d dependences ; then
  pushd ./ &> /dev/null ;

  cd dependences ;
  for i in `ls` ; do
    if ! test -d $i ; then
      continue ;
    fi

    numberOfBenchmarks="`ls -l ${resultDir}/IR/${i}/benchmarks/*/NOELLE_input.bc 2> /dev/null | wc -l`" ;
    numberOfNOELLE="`ls -l ${i}/noelle/*.txt 2> /dev/null | wc -l`" ;
    numberOfLLVM="`ls -l ${i}/llvm/*.txt 2> /dev/null | wc -l`" ;
    if test "$numberOfBenchmarks" != "$numberOfLLVM" ; then
      echo "The suite \"$i\" has only $numberOfLLVM (over $numberOfBenchmarks) benchmarks with LLVM dependence information" ;
    fi
    if test "$numberOfBenchmarks" != "$numberOfNOELLE" ; then
      echo "The suite \"$i\" has only $numberOfNOELLE (over $numberOfBenchmarks) benchmarks with NOELLE dependence information" ;
    fi
  done

  popd &> /dev/null ;

else
  echo "  Not available" ;
fi
echo "" ;

# Check the dependences
echo "=== Parallelization";
if test -d parallelization ; then
  pushd ./ &> /dev/null ;

  cd parallelization ;
  for i in `ls` ; do
    if ! test -d $i ; then
      continue ;
    fi

    numberOfBenchmarks="`ls -l ${resultDir}/IR/${i}/benchmarks/*/NOELLE_input.bc 2> /dev/null | wc -l`" ;
    for j in `ls $i` ; do
      numberOfParallelizations="`wc -l ${i}/${j} | awk '{print $1}'`" ;
      if test "$numberOfBenchmarks" != "$numberOfParallelizations" ; then
        technique="`echo $j |sed 's/\.txt//g'`" ;
        echo "The suite \"$i\" has only $numberOfParallelizations (over $numberOfBenchmarks) benchmarks with parallelization statistics for $technique" ;
      fi
    done
  done

  popd &> /dev/null ;

else
  echo "  Not available" ;
fi
echo "" ;


# Check the time
echo "=== Execution time";
if test -d time ; then
  pushd ./ &> /dev/null ;

  cd time ;
  for i in `ls` ; do
    if ! test -d $i ; then
      continue ;
    fi

    # Fetch the number of benchmarks of the current suite
    numberOfBenchmarks="`ls -l ${resultDir}/IR/${i}/benchmarks/*/NOELLE_input.bc 2> /dev/null | wc -l`" ;
    if test "$numberOfBenchmarks" == "0"; then
      echo "The suite \"$i\" does not have any NOELLE_input.bc. This typically happens when a benchmark suite has not been compiled" ;
      continue ;
    fi
    numberOfBaselines="`ls -l ${i}/baseline/*.txt 2> /dev/null | wc -l`" ;
    numberOfNONE="`ls -l ${i}/NONE/*.txt 2> /dev/null | wc -l`" ;
    numberOfDOALL="`ls -l ${i}/DOALL/*.txt 2> /dev/null | wc -l`" ;
    numberOfAUTOTUNER="`ls -l ${i}/AUTOTUNER/*.txt 2> /dev/null | wc -l`" ;
    if test -d ${i}/HELIX ; then
      numberOfHELIX="`ls -l ${i}/HELIX/*.txt 2> /dev/null | wc -l`" ;
    else
      numberOfHELIX="0" ;
    fi
    if test -d ${i}/DSWP ; then
      numberOfDSWP="`ls -l ${i}/DSWP/*.txt 2> /dev/null | wc -l`" ;
    else
      numberOfDSWP="0" ;
    fi
    if test "$numberOfBenchmarks" != "$numberOfBaselines" ; then
      echo "The suite \"$i\" has only $numberOfBaselines (over $numberOfBenchmarks) baselines with execution times" ;
    fi
    if test "$numberOfBenchmarks" != "$numberOfNONE" ; then
      echo "The suite \"$i\" has only $numberOfNONE (over $numberOfBenchmarks) benchmarks parallelized with NONE with execution times" ;
    fi
    if test "$numberOfBenchmarks" != "$numberOfDOALL" ; then
      echo "The suite \"$i\" has only $numberOfDOALL (over $numberOfBenchmarks) benchmarks parallelized with DOALL with execution times" ;
    fi
    if test "$numberOfBenchmarks" != "$numberOfHELIX" ; then
      echo "The suite \"$i\" has only $numberOfHELIX (over $numberOfBenchmarks) benchmarks parallelized with HELIX with execution times" ;
    fi
    if test "$numberOfBenchmarks" != "$numberOfDSWP" ; then
      echo "The suite \"$i\" has only $numberOfDSWP (over $numberOfBenchmarks) benchmarks parallelized with DSWP with execution times" ;
    fi
    if test "$numberOfBenchmarks" != "$numberOfAUTOTUNER" ; then
      echo "The suite \"$i\" has only $numberOfAUTOTUNER (over $numberOfBenchmarks) benchmarks parallelized with AUTOTUNER with execution times" ;
    fi

  done
  popd &> /dev/null ;

else
  echo "  Not available";
fi
echo "" ;
